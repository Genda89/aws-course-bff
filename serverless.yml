service: aws-course-bff
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  httpApi:
    cors: true
  enviroment:
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: '*'

plugins:
  - serverless-auto-swagger
  - serverless-webpack
  - serverless-offline

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'
    includeModules: true
  autoswagger:
    typefiles: ['./types/product.types.ts', './types/api.types.ts']
  ProductsTable: products
  StocksTable: stocks

Resources:
  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.ProductsTable}
  StocksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:custom.StocksTable}

functions:
  getProductsList:
    handler: handlers/index.getProductsList
    events:
      - httpApi:
          path: /products
          method: get
          cors:
            origin: '*'
          responseData:
            200:
              description: Successful response
              bodyType: ProductList
            500:
              description: Something went wrong
              bodyType: ErrorResponse
  getProductById:
    handler: handlers/index.getProductById
    events:
      - httpApi:
          path: /products/{id}
          method: get
          responseData:
            200:
              description: Successful response
              bodyType: Product
            404:
              description: Product not found
              bodyType: ErrorResponse
            500:
              description: Something went wrong
              bodyType: ErrorResponse
        createProduct:
